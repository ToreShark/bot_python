#!/usr/bin/env python3
"""
Production seed script –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤–∏–¥–µ–æ —Å—Å—ã–ª–æ–∫
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¢–û–õ–¨–ö–û –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–µ!
"""

import os
from pymongo import MongoClient
from datetime import datetime

# –í–ê–ñ–ù–û: –≠—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ü–†–û–î–ê–ö–®–ù
MONGO_URI = os.getenv("MONGO_URI_PROD") or input("–í–≤–µ–¥–∏—Ç–µ MONGO_URI –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω: ")
NEW_CHANNEL_ID = "2684584475"
OLD_CHANNEL_ID = "2275474152"

# –¢–∞–±–ª–∏—Ü–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π (—Ç–∞ –∂–µ —á—Ç–æ –∏ –ª–æ–∫–∞–ª—å–Ω–æ)
VIDEO_MAPPING = {
    "lesson_1_1": {"old": 20, "new": 5},
    "lesson_1_2": {"old": 22, "new": 3},
    "lesson_1_3": {"old": 13, "new": 12},
    "lesson_1_4": {"old": 34, "new": 14},
    "lesson_2_1": {"old": 16, "new": 9},
    "lesson_2_2": {"old": 14, "new": 11},
    "lesson_2_3": {"old": 15, "new": 10},
    "lesson_3_1": {"old": 21, "new": 6},
    "lesson_3_2": {"old": 18, "new": 7},
}

def update_production_videos():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –≤–∏–¥–µ–æ —Å—Å—ã–ª–∫–∏ –≤ –ø—Ä–æ–¥–∞–∫—à–Ω –ë–î"""
    print("üöÄ PRODUCTION SEED: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ —Å—Å—ã–ª–æ–∫")
    print(f"üéØ –ö–∞–Ω–∞–ª: {OLD_CHANNEL_ID} ‚Üí {NEW_CHANNEL_ID}")
    print("=" * 50)
    
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ø—Ä–æ–¥–∞–∫—à–Ω –ë–î
    try:
        client = MongoClient(MONGO_URI)
        db = client["telegram_bot"]
        lessons = db["lessons"]
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ø—Ä–æ–¥–∞–∫—à–Ω –ë–î —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    total_lessons = lessons.count_documents({})
    old_links = lessons.count_documents({
        "video_url": {"$regex": f"t.me/c/{OLD_CHANNEL_ID}/"}
    })
    new_links = lessons.count_documents({
        "video_url": {"$regex": f"t.me/c/{NEW_CHANNEL_ID}/"}
    })
    
    print(f"üìä –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:")
    print(f"  –í—Å–µ–≥–æ —É—Ä–æ–∫–æ–≤: {total_lessons}")
    print(f"  –°—Ç–∞—Ä—ã–µ —Å—Å—ã–ª–∫–∏: {old_links}")
    print(f"  –ù–æ–≤—ã–µ —Å—Å—ã–ª–∫–∏: {new_links}")
    
    if old_links == 0:
        print("‚úÖ –í—Å–µ —Å—Å—ã–ª–∫–∏ —É–∂–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")
        return True
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    confirm = input(f"\n‚ö†Ô∏è  –û–±–Ω–æ–≤–∏—Ç—å {old_links} —Å—Å—ã–ª–æ–∫? (yes/no): ")
    if confirm.lower() != "yes":
        print("‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        return False
    
    # –û–±–Ω–æ–≤–ª—è–µ–º
    updated = 0
    for lesson_id, mapping in VIDEO_MAPPING.items():
        old_url = f"https://t.me/c/{OLD_CHANNEL_ID}/{mapping['old']}"
        new_url = f"https://t.me/c/{NEW_CHANNEL_ID}/{mapping['new']}"
        
        result = lessons.update_one(
            {"lesson_id": lesson_id, "video_url": old_url},
            {
                "$set": {
                    "video_url": new_url,
                    "updated_at": datetime.utcnow(),
                    "migration_info": {
                        "migrated_from": old_url,
                        "migrated_at": datetime.utcnow(),
                        "script_version": "production_seed_v1"
                    }
                }
            }
        )
        
        if result.modified_count > 0:
            print(f"‚úÖ {lesson_id}: {old_url} ‚Üí {new_url}")
            updated += 1
        else:
            lesson = lessons.find_one({"lesson_id": lesson_id})
            if lesson:
                current_url = lesson.get("video_url", "")
                if current_url == new_url:
                    print(f"‚ÑπÔ∏è  {lesson_id}: –£–∂–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ")
                else:
                    print(f"‚ö†Ô∏è  {lesson_id}: –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ - {current_url}")
    
    print(f"\n‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {updated} —É—Ä–æ–∫–æ–≤")
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    final_old = lessons.count_documents({
        "video_url": {"$regex": f"t.me/c/{OLD_CHANNEL_ID}/"}
    })
    final_new = lessons.count_documents({
        "video_url": {"$regex": f"t.me/c/{NEW_CHANNEL_ID}/"}
    })
    
    print(f"\nüìä –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:")
    print(f"  –°—Ç–∞—Ä—ã–µ —Å—Å—ã–ª–∫–∏: {final_old}")
    print(f"  –ù–æ–≤—ã–µ —Å—Å—ã–ª–∫–∏: {final_new}")
    
    if final_old == 0:
        print("üéâ –í–°–ï –°–°–´–õ–ö–ò –£–°–ü–ï–®–ù–û –û–ë–ù–û–í–õ–ï–ù–´!")
        return True
    else:
        print(f"‚ö†Ô∏è  –û—Å—Ç–∞–ª–∏—Å—å –Ω–µ–æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏: {final_old}")
        return False

if __name__ == "__main__":
    print("üî• PRODUCTION SEED SCRIPT")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∑–∞–ø—É—Å–∫–∞–µ—Ç–µ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ!")
    print("–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∏–∑–º–µ–Ω–∏—Ç –ø—Ä–æ–¥–∞–∫—à–Ω –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö!")
    
    server_confirm = input("\n‚ö†Ô∏è  –≠—Ç–æ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä? (YES –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è): ")
    if server_confirm != "YES":
        print("‚ùå –°–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")
        exit(1)
    
    success = update_production_videos()
    
    if success:
        print("\n‚ú® MIGRATION COMPLETED SUCCESSFULLY!")
        print("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π")
    else:
        print("\n‚ùå MIGRATION FAILED!")
        print("üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")