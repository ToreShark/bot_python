# document_processor.py

from pymongo import MongoClient
import os
from datetime import datetime
from text_extractor import extract_text_from_pdf
from ocr import ocr_file, detect_document_type
from credit_parser import extract_credit_data_with_total, format_summary
from dotenv import load_dotenv

load_dotenv()  # –ü–æ–¥–≥—Ä—É–∂–∞–µ–º .env –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º
env = os.getenv("ENV", "prod").lower()
DEBUG_MODE = env == "dev"

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
if DEBUG_MODE:
    client = MongoClient("mongodb://localhost:27017")
    print(f"[DEBUG] –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ª–æ–∫–∞–ª—å–Ω–æ–π MongoDB (—Ä–µ–∂–∏–º {env})")
else:
    client = MongoClient(os.getenv("MONGO_URI"))
    print(f"[DEBUG] –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB Atlas (—Ä–µ–∂–∏–º {env})")
# db_name = "tg_bot_dev" if DEBUG_MODE else "telegram_bot"
db_name = "telegram_bot"
db = client[db_name]
docs_collection = db['documents']


# –í —Ñ–∞–π–ª–µ document_processor.py –∑–∞–º–µ–Ω–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é process_uploaded_file:

def process_uploaded_file(filepath, user_id):
    # 1. –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ PDF
    text = extract_text_from_pdf(filepath)
    
    # 2. –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç–∞ –Ω–µ—Ç ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º OCR
    if not text.strip():
        text = ocr_file(filepath)

    # 3. –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞
    doc_type = detect_document_type(text)

    # 4. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫—Ä–µ–¥–∏—Ç–Ω—ã–π –æ—Ç—á—ë—Ç
    if doc_type == "credit_report":
        # –ü–∞—Ä—Å–∏–º –æ—Ç—á–µ—Ç
        parsed = extract_credit_data_with_total(text)
        
        # üîç –ü–†–û–í–ï–†–Ø–ï–ú –î–£–ë–õ–ò–ö–ê–¢–´ –ü–û –ò–ò–ù
        iin = parsed.get("personal_info", {}).get("iin")
        
        if iin:
            # –ò—â–µ–º –≤ –±–∞–∑–µ –æ—Ç—á–µ—Ç —Å —Ç–∞–∫–∏–º –∂–µ –ò–ò–ù
            existing = db['credit_reports'].find_one({"parsed.personal_info.iin": iin})
            
            if existing:
                # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –¥—É–±–ª–∏–∫–∞—Ç - –ù–ï —Å–æ—Ö—Ä–∞–Ω—è–µ–º
                print(f"[INFO] –ù–∞–π–¥–µ–Ω –¥—É–±–ª–∏–∫–∞—Ç –æ—Ç—á–µ—Ç–∞ –¥–ª—è –ò–ò–ù {iin} - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
                summary = format_summary(existing["parsed"])
                return {
                    "type": doc_type, 
                    "message": f"üìÑ –û—Ç—á—ë—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.\n\n{summary}"
                }
        
        # –ï—Å–ª–∏ –¥—É–±–ª–∏–∫–∞—Ç–∞ –Ω–µ—Ç - —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ –æ–±—ã—á–Ω–æ
        print(f"[INFO] –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π –æ—Ç—á–µ—Ç –¥–ª—è –ò–ò–ù {iin or '–±–µ–∑ –ò–ò–ù'}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
        docs_collection.insert_one({
            "user_id": user_id,
            "doc_type": doc_type,
            "text": text,
            "uploaded_at": datetime.utcnow().isoformat()
        })

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∞—Ä—Å–∏–Ω–≥
        db['credit_reports'].insert_one({
            "user_id": user_id,
            "parsed": parsed,
            "uploaded_at": datetime.utcnow().isoformat()
        })

        summary = format_summary(parsed)
        return {
            "type": doc_type, 
            "message": f"üìÑ –û—Ç—á—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω.\n\n{summary}"
        }

    # 5. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —á–µ–∫–∏ –æ–± –æ–ø–ª–∞—Ç–µ (–±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤)
    elif doc_type == "payment_receipt":
        docs_collection.insert_one({
            "user_id": user_id,
            "doc_type": doc_type,
            "text": text,
            "uploaded_at": datetime.utcnow().isoformat()
        })
        return {"type": doc_type, "message": "üì∏ –ö–≤–∏—Ç–∞–Ω—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞. –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è."}
    
    # 6. –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
    else:
        docs_collection.insert_one({
            "user_id": user_id,
            "doc_type": doc_type,
            "text": text,
            "uploaded_at": datetime.utcnow().isoformat()
        })
        return {"type": "unknown", "message": "‚ùì –î–æ–∫—É–º–µ–Ω—Ç –ø–æ–ª—É—á–µ–Ω, –Ω–æ —Ç–∏–ø –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω."}  
    
