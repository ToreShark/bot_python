import telebot
import os
from dotenv import load_dotenv
from pymongo import MongoClient
from legal_engine import query
from datetime import datetime, timezone, timedelta
from telebot import types
from document_processor import process_uploaded_file
import time
import requests
from pydub import AudioSegment
import openai
# –ü–∞—Ä—Å–µ—Ä –∫—Ä–µ–¥–∏—Ç–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ —É–∂–µ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω –≤ document_processor

load_dotenv()

print(f"[INFO] –¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º: {os.getenv('ENV', 'prod')}")

BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
bot = telebot.TeleBot(BOT_TOKEN)

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB Atlas
MONGO_URI = os.getenv("MONGO_URI")
client = MongoClient(MONGO_URI)

# –í—ã–±–æ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
db = client['telegram_bot']
users_collection = db['users']

# –ü—Ä–æ—Å—Ç–∞—è –∞–Ω—Ç–∏–≤–∞–Ω–¥–∞–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞: –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–æ—Å—Ç—É–ø
user_last_access = {}
user_states = {}  # –î–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

@bot.message_handler(commands=['start'])
def main(message):
    user_id = message.from_user.id
    first_name = message.from_user.first_name
    last_name = message.from_user.last_name
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞: –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ
    existing_user = users_collection.find_one({"user_id": user_id})
    if not existing_user:
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        users_collection.insert_one({
            "user_id": user_id,
            "first_name": first_name,
            "last_name": last_name,
            "access": False,
            "message_limit": 0,
            "messages": []
        })
    
    # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º
    markup = types.InlineKeyboardMarkup(row_width=1)
    
    # –ö–Ω–æ–ø–∫–∏ —É—Å–ª—É–≥
    lawyer_btn = types.InlineKeyboardButton(
        "‚öñÔ∏è –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —é—Ä–∏—Å—Ç–∞ (–ø–ª–∞—Ç–Ω–æ) üí∞", 
        callback_data="lawyer_consultation"
    )
    credit_btn = types.InlineKeyboardButton(
        "üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫—Ä–µ–¥–∏—Ç–Ω—ã–π –æ—Ç—á–µ—Ç (–±–µ—Å–ø–ª–∞—Ç–Ω–æ) üÜì", 
        callback_data="check_credit_report"
    )
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    info_btn = types.InlineKeyboardButton(
        "‚ÑπÔ∏è –û –±–æ—Ç–µ", 
        callback_data="bot_info"
    )
    
    markup.add(lawyer_btn, credit_btn, info_btn)
    
    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    welcome_text = (
        f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {first_name}!\n\n"
        "ü§ñ –Ø –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç.\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é —É—Å–ª—É–≥—É:"
    )
    
    bot.send_message(
        message.chat.id,
        welcome_text,
        reply_markup=markup
    )
    
    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
    ADMIN_USER_IDS = [376068212, 827743984]
    if user_id not in ADMIN_USER_IDS:
        timestamp = datetime.now(timezone.utc).strftime("%Y-%m-%d %H:%M UTC")
        admin_text = (
            "üÜï –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:\n"
            f"üë§ –ò–º—è: {first_name} {last_name}\n"
            f"üÜî ID: {user_id}\n"
            f"üïí –í—Ä–µ–º—è: {timestamp}"
        )
        for admin_id in ADMIN_USER_IDS:
            try:
                bot.send_message(admin_id, admin_text)
            except Exception as e:
                print(f"[WARN] –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É {admin_id}: {e}")

@bot.callback_query_handler(func=lambda call: True)
def handle_callback_query(call):
    user_id = call.from_user.id
    
    if call.data == "lawyer_consultation":
        handle_lawyer_consultation(call)
    elif call.data == "check_credit_report":
        handle_credit_report_request(call)
    elif call.data == "bot_info":
        handle_bot_info(call)
    elif call.data.startswith("pay_"):
        handle_payment_callback(call)
    elif call.data == "back_to_menu":
        # –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        main_menu_markup = create_main_menu()
        bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é —É—Å–ª—É–≥—É:",
            reply_markup=main_menu_markup
        )
    
    bot.answer_callback_query(call.id)

def create_main_menu():
    """–°–æ–∑–¥–∞–µ—Ç —Ä–∞–∑–º–µ—Ç–∫—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    markup = types.InlineKeyboardMarkup(row_width=1)
    
    lawyer_btn = types.InlineKeyboardButton(
        "‚öñÔ∏è –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —é—Ä–∏—Å—Ç–∞ (–ø–ª–∞—Ç–Ω–æ) üí∞", 
        callback_data="lawyer_consultation"
    )
    credit_btn = types.InlineKeyboardButton(
        "üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫—Ä–µ–¥–∏—Ç–Ω—ã–π –æ—Ç—á–µ—Ç (–±–µ—Å–ø–ª–∞—Ç–Ω–æ) üÜì", 
        callback_data="check_credit_report"
    )
    info_btn = types.InlineKeyboardButton(
        "‚ÑπÔ∏è –û –±–æ—Ç–µ", 
        callback_data="bot_info"
    )
    
    markup.add(lawyer_btn, credit_btn, info_btn)
    return markup

def handle_lawyer_consultation(call):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é —é—Ä–∏—Å—Ç–∞"""
    user_id = call.from_user.id
    user = users_collection.find_one({"user_id": user_id})
    
    if not user or not user.get("access", False):
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã
        markup = types.InlineKeyboardMarkup()
        
        markup.add(types.InlineKeyboardButton("üí∞ 5 000 ‚Ç∏ - 10 –≤–æ–ø—Ä–æ—Å–æ–≤", callback_data="pay_5000"))
        markup.add(types.InlineKeyboardButton("üí∞ 10 000 ‚Ç∏ - 25 –≤–æ–ø—Ä–æ—Å–æ–≤", callback_data="pay_10000"))
        markup.add(types.InlineKeyboardButton("üí∞ 15 000 ‚Ç∏ - 50 –≤–æ–ø—Ä–æ—Å–æ–≤", callback_data="pay_15000"))
        markup.add(types.InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu"))
        
        payment_text = (
            "‚öñÔ∏è **–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —é—Ä–∏—Å—Ç–∞**\n\n"
            "üí° –ü–æ–ª—É—á–∏—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é —é—Ä–∏–¥–∏—á–µ—Å–∫—É—é –ø–æ–º–æ—â—å:\n"
            "‚Ä¢ –ê–Ω–∞–ª–∏–∑ –¥–æ–≥–æ–≤–æ—Ä–æ–≤\n"
            "‚Ä¢ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ —Ç—Ä—É–¥–æ–≤–æ–º—É –ø—Ä–∞–≤—É\n"
            "‚Ä¢ –°–µ–º–µ–π–Ω—ã–µ —Å–ø–æ—Ä—ã\n"
            "‚Ä¢ –ó–∞—â–∏—Ç–∞ –ø—Ä–∞–≤ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–µ–π\n\n"
            "üí≥ –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ:"
        )
        
        bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text=payment_text,
            reply_markup=markup,
            parse_mode='Markdown'
        )
    else:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–π
        if user.get("message_limit", 0) <= 0:
            bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="üìµ –í–∞—à –ª–∏–º–∏—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π –∏—Å—á–µ—Ä–ø–∞–Ω.\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è.",
                reply_markup=types.InlineKeyboardMarkup().add(
                    types.InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu")
                )
            )
        else:
            # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —Ä–µ–∂–∏–º –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
            user_states[user_id] = "lawyer_consultation"
            
            remaining = user.get("message_limit", 0)
            bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text=f"‚öñÔ∏è **–†–µ–∂–∏–º –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω**\n\n"
                     f"üìù –û—Å—Ç–∞–ª–æ—Å—å –≤–æ–ø—Ä–æ—Å–æ–≤: {remaining}\n\n"
                     f"‚úçÔ∏è –û–ø–∏—à–∏—Ç–µ –≤–∞—à—É —Å–∏—Ç—É–∞—Ü–∏—é –ø–æ–¥—Ä–æ–±–Ω–æ, –∏ —è –¥–∞–º —é—Ä–∏–¥–∏—á–µ—Å–∫—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é.",
                parse_mode='Markdown',
                reply_markup=types.InlineKeyboardMarkup().add(
                    types.InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu")
                )
            )

def handle_credit_report_request(call):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –∫—Ä–µ–¥–∏—Ç–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞"""
    user_id = call.from_user.id
    user_states[user_id] = "waiting_credit_report"
    
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu"))
    
    instruction_text = (
        "üìä **–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–µ–¥–∏—Ç–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞**\n\n"
        "üìÑ –û—Ç–ø—Ä–∞–≤—å—Ç–µ PDF —Ñ–∞–π–ª –≤–∞—à–µ–≥–æ –∫—Ä–µ–¥–∏—Ç–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –∏–∑:\n"
        "‚Ä¢ –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∫—Ä–µ–¥–∏—Ç–Ω–æ–≥–æ –±—é—Ä–æ (–ì–ö–ë)\n"
        "‚Ä¢ –ü–µ—Ä–≤–æ–≥–æ –∫—Ä–µ–¥–∏—Ç–Ω–æ–≥–æ –±—é—Ä–æ (–ü–ö–ë)\n\n"
        "üéØ –Ø –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é –æ—Ç—á–µ—Ç –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—é:\n"
        "‚Ä¢ –û–±—â—É—é —Å—É–º–º—É –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏\n"
        "‚Ä¢ –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫—Ä–µ–¥–∏—Ç–æ—Ä–æ–≤\n"
        "‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Å—Ä–æ—á–∫–∞—Ö\n"
        "‚Ä¢ –ï–∂–µ–º–µ—Å—è—á–Ω—É—é –Ω–∞–≥—Ä—É–∑–∫—É\n\n"
        "üìé **–û—Ç–ø—Ä–∞–≤—å—Ç–µ PDF —Ñ–∞–π–ª –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å**"
    )
    
    bot.edit_message_text(
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        text=instruction_text,
        reply_markup=markup,
        parse_mode='Markdown'
    )

def handle_bot_info(call):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ"""
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu"))
    
    info_text = (
        "‚ÑπÔ∏è **–û –±–æ—Ç–µ**\n\n"
        "ü§ñ –Ø - –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —Å —Ñ—É–Ω–∫—Ü–∏–µ–π –∞–Ω–∞–ª–∏–∑–∞ –∫—Ä–µ–¥–∏—Ç–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤.\n\n"
        "**–ú–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**\n"
        "‚öñÔ∏è –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ (–ø–ª–∞—Ç–Ω–æ)\n"
        "üìä –ê–Ω–∞–ª–∏–∑ –∫—Ä–µ–¥–∏—Ç–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)\n"
        "üé§ –†–∞–±–æ—Ç–∞ —Å –≥–æ–ª–æ—Å–æ–≤—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏\n\n"
        "**–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –æ—Ç—á–µ—Ç–æ–≤:**\n"
        "‚Ä¢ –ì–ö–ë (–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ –∫—Ä–µ–¥–∏—Ç–Ω–æ–µ –±—é—Ä–æ)\n"
        "‚Ä¢ –ü–ö–ë (–ü–µ—Ä–≤–æ–µ –∫—Ä–µ–¥–∏—Ç–Ω–æ–µ –±—é—Ä–æ)\n"
        "‚Ä¢ –ö–∞–∑–∞—Ö—Å–∫–∏–π –∏ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫–∏\n\n"
        "üìû **–ü–æ–¥–¥–µ—Ä–∂–∫–∞:** +77007000000"
    )
    
    bot.edit_message_text(
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        text=info_text,
        reply_markup=markup,
        parse_mode='Markdown'
    )

def handle_payment_callback(call):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Å—É–º–º—ã –æ–ø–ª–∞—Ç—ã"""
    amount_map = {
        "pay_5000": ("5 000", "10 –≤–æ–ø—Ä–æ—Å–æ–≤"),
        "pay_10000": ("10 000", "25 –≤–æ–ø—Ä–æ—Å–æ–≤"),
        "pay_15000": ("15 000", "50 –≤–æ–ø—Ä–æ—Å–æ–≤")
    }
    
    amount, questions = amount_map.get(call.data, ("–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å—É–º–º–∞", "0 –≤–æ–ø—Ä–æ—Å–æ–≤"))
    
    if amount == "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å—É–º–º–∞":
        bot.answer_callback_query(call.id, "‚ö†Ô∏è –û—à–∏–±–∫–∞: —Å—É–º–º–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞.")
        return
    
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –∫ —Ç–∞—Ä–∏—Ñ–∞–º", callback_data="lawyer_consultation"))
    
    payment_text = (
        f"üí≥ **–û–ø–ª–∞—Ç–∞ {amount} ‚Ç∏**\n"
        f"üìù –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤: {questions}\n\n"
        f"üè¶ **–î–ª—è –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:**\n"
        f"üí≥ Kaspi: https://pay.kaspi.kz/pay/izbl0ktq\n\n"
        f"üì∏ –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –ø—Ä–∏—à–ª–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞."
    )
    
    bot.edit_message_text(
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        text=payment_text,
        reply_markup=markup,
        parse_mode='Markdown'
    )

# –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ document_processor

@bot.message_handler(content_types=['document'])
def handle_document(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (PDF –¥–ª—è –∫—Ä–µ–¥–∏—Ç–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ –∏ —á–µ–∫–∏ –æ–± –æ–ø–ª–∞—Ç–µ)"""
    user_id = message.from_user.id
    current_state = user_states.get(user_id)
    
    if current_state == "waiting_credit_report":
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫—Ä–µ–¥–∏—Ç–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
        handle_credit_report_pdf(message)
    else:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —á–µ–∫–∞ –æ–± –æ–ø–ª–∞—Ç–µ (—Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –ª–æ–≥–∏–∫–∞)
        handle_payment_receipt(message)

def handle_credit_report_pdf(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ PDF —Ñ–∞–π–ª–∞ –∫—Ä–µ–¥–∏—Ç–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞"""
    user_id = message.from_user.id
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ PDF —Ñ–∞–π–ª
        file_name = message.document.file_name
        if not file_name or not file_name.lower().endswith('.pdf'):
            bot.reply_to(
                message, 
                "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ PDF —Ñ–∞–π–ª –∫—Ä–µ–¥–∏—Ç–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞."
            )
            return
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        status_msg = bot.send_message(
            message.chat.id, 
            "‚è≥ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∞—à –∫—Ä–µ–¥–∏—Ç–Ω—ã–π –æ—Ç—á–µ—Ç...\nüìÑ –ò–∑–≤–ª–µ–∫–∞—é —Ç–µ–∫—Å—Ç –∏–∑ PDF..."
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
        file_info = bot.get_file(message.document.file_id)
        file_path = f"temp/{file_name}"
        os.makedirs("temp", exist_ok=True)
        
        with open(file_path, "wb") as f:
            f.write(bot.download_file(file_info.file_path))
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
        bot.edit_message_text(
            chat_id=message.chat.id,
            message_id=status_msg.message_id,
            text="‚è≥ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∞—à –∫—Ä–µ–¥–∏—Ç–Ω—ã–π –æ—Ç—á–µ—Ç...\nüîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ..."
        )
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
        result = process_uploaded_file(file_path, user_id)
        
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu"))
        markup.add(types.InlineKeyboardButton("üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥—Ä—É–≥–æ–π –æ—Ç—á–µ—Ç", callback_data="check_credit_report"))
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if result and "message" in result:
            bot.edit_message_text(
                chat_id=message.chat.id,
                message_id=status_msg.message_id,
                text=f"‚úÖ **–ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω**\n\n{result['message']}",
                reply_markup=markup,
                parse_mode='Markdown'
            )
        else:
            bot.edit_message_text(
                chat_id=message.chat.id,
                message_id=status_msg.message_id,
                text="‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–∞–π–ª.\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —ç—Ç–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∫—Ä–µ–¥–∏—Ç–Ω—ã–π –æ—Ç—á–µ—Ç.",
                reply_markup=markup
            )
        
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        try:
            os.remove(file_path)
        except Exception as e:
            print(f"[WARN] –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª {file_path}: {e}")
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_states.pop(user_id, None)
        
        # –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É
        print(f"[INFO] –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω –∫—Ä–µ–¥–∏—Ç–Ω—ã–π –æ—Ç—á–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫—Ä–µ–¥–∏—Ç–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞: {e}")
        try:
            bot.edit_message_text(
                chat_id=message.chat.id,
                message_id=status_msg.message_id,
                text="‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç—á–µ—Ç–∞.\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
            )
        except:
            bot.send_message(
                message.chat.id,
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç—á–µ—Ç–∞.\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
            )

def handle_payment_receipt(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —á–µ–∫–∞ –æ–± –æ–ø–ª–∞—Ç–µ (—Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –ª–æ–≥–∏–∫–∞)"""
    user_id = message.from_user.id
    file_info = bot.get_file(message.document.file_id)
    file_name = message.document.file_name
    file_path = f"temp/{file_name}"
    os.makedirs("temp", exist_ok=True)
    
    with open(file_path, "wb") as f:
        f.write(bot.download_file(file_info.file_path))

    try:
        result = process_uploaded_file(file_path, user_id)
        
        if "message" in result:
            bot.send_message(message.chat.id, result["message"])

        if result["type"] == "payment_receipt":
            bot.send_message(
                message.chat.id,
                "‚úÖ –°–ø–∞—Å–∏–±–æ! –ß–µ–∫ –ø–æ–ª—É—á–µ–Ω –∏ –ø–µ—Ä–µ–¥–∞–Ω –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É.\n\n"
                "‚è∞ –î–æ—Å—Ç—É–ø –±—É–¥–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –≤ —Ç–µ—á–µ–Ω–∏–µ 1 —á–∞—Å–∞.\n"
                "üìû –í–æ–ø—Ä–æ—Å—ã: +77007000000"
            )

    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞: {e}")
        bot.send_message(message.chat.id, "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    finally:
        try:
            os.remove(file_path)
        except Exception as e:
            print(f"[WARN] –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª {file_path}: {e}")

    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–æ–≤
    ADMIN_USER_IDS = [376068212, 827743984]
    caption = (
        f"üì© –ü–æ–ª—É—á–µ–Ω —á–µ–∫ –æ–± –æ–ø–ª–∞—Ç–µ:\n"
        f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_id}\n"
        f"üìé –§–∞–π–ª: {file_name}"
    )

    for admin_id in ADMIN_USER_IDS:
        try:
            bot.forward_message(
                chat_id=admin_id, 
                from_chat_id=message.chat.id, 
                message_id=message.message_id
            )
            bot.send_message(admin_id, caption)
        except Exception as e:
            print(f"[WARN] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ—Å–ª–∞—Ç—å —Ñ–∞–π–ª –∞–¥–º–∏–Ω—É {admin_id}: {e}")

@bot.message_handler(commands=['grant_access'])
def grant_access(message):
    """–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"""
    ADMIN_USER_IDS = [376068212, 827743984]
    if message.from_user.id not in ADMIN_USER_IDS:
        bot.reply_to(message, "‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    try:
        _, user_id_str, limit_str = message.text.split()
        user_id = int(user_id_str)
        message_limit = int(limit_str)

        result = users_collection.update_one(
            {"user_id": user_id},
            {"$set": {"access": True, "message_limit": message_limit}}
        )

        if result.matched_count == 0:
            bot.reply_to(message, f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return

        # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        bot.send_message(
            user_id, 
            f"‚úÖ **–î–æ—Å—Ç—É–ø –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!**\n\n"
            f"üìù –õ–∏–º–∏—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π: {message_limit}\n"
            f"‚öñÔ∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã.",
            parse_mode='Markdown'
        )
        bot.reply_to(message, f"‚úÖ –î–æ—Å—Ç—É–ø –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}.")
        
    except Exception as e:
        print(f"[ERROR grant_access] {e}")
        bot.reply_to(
            message, 
            "‚ö†Ô∏è –û—à–∏–±–∫–∞. –§–æ—Ä–º–∞—Ç: /grant_access [user_id] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_–≤–æ–ø—Ä–æ—Å–æ–≤]"
        )

@bot.message_handler(func=lambda message: True)
def handle_all_messages(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user_id = message.from_user.id
    current_state = user_states.get(user_id)
    
    if current_state == "lawyer_consultation":
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–ø—Ä–æ—Å–∞ –∫ —é—Ä–∏—Å—Ç—É
        handle_lawyer_question(message)
    elif current_state == "waiting_credit_report":
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ä–µ–∂–∏–º–µ –æ–∂–∏–¥–∞–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
        bot.reply_to(
            message,
            "üìä –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ PDF —Ñ–∞–π–ª –∫—Ä–µ–¥–∏—Ç–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞.\n"
            "–¢–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤ —ç—Ç–æ–º —Ä–µ–∂–∏–º–µ."
        )
    else:
        # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é
        markup = create_main_menu()
        bot.send_message(
            message.chat.id,
            "ü§ñ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É:",
            reply_markup=markup
        )

def handle_lawyer_question(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–ø—Ä–æ—Å–∞ –∫ —é—Ä–∏—Å—Ç—É"""
    user_id = message.from_user.id
    text = message.text
    now = datetime.now(timezone.utc)

    user = users_collection.find_one({"user_id": user_id})

    if not user or not user.get("access", False):
        bot.send_message(
            message.chat.id, 
            "‚õî –î–æ—Å—Ç—É–ø –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω. –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å /start –¥–ª—è –æ–ø–ª–∞—Ç—ã."
        )
        user_states.pop(user_id, None)
        return

    if user.get("message_limit", 0) <= 0:
        bot.send_message(
            message.chat.id, 
            "üìµ –õ–∏–º–∏—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π –∏—Å—á–µ—Ä–ø–∞–Ω.\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É: +77007000000"
        )
        user_states.pop(user_id, None)
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π (–∫–∞–∫ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º –∫–æ–¥–µ)
    ADMIN_USER_IDS = [376068212, 827743984]
    if user_id not in ADMIN_USER_IDS:
        today_start = datetime(now.year, now.month, now.day, tzinfo=timezone.utc)
        message_count = users_collection.count_documents({
            "user_id": user_id,
            "messages.timestamp": {"$gte": today_start.isoformat()}
        })

        if message_count >= 3:
            bot.send_message(message.chat.id, "üìµ –õ–∏–º–∏—Ç: –Ω–µ –±–æ–ª–µ–µ 3 –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ —Å—É—Ç–∫–∏.")
            return

    # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ —á–∞—Å—Ç–æ—Ç–µ (5 –º–∏–Ω—É—Ç)
    if user_id in user_last_access:
        last_time = user_last_access[user_id]
        if now - last_time < timedelta(minutes=5):
            bot.send_message(message.chat.id, "‚è≥ –ü–æ–¥–æ–∂–¥–∏—Ç–µ 5 –º–∏–Ω—É—Ç –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –≤–æ–ø—Ä–æ—Å–æ–º.")
            return
    user_last_access[user_id] = now

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    users_collection.update_one(
        {"user_id": user_id},
        {"$push": {
            "messages": {
                "text": text,
                "timestamp": datetime.utcnow().isoformat()
            }
        }}
    )

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–æ–ø—Ä–æ—Å
    try:
        status_msg = bot.send_message(message.chat.id, "‚åõ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∞—à –≤–æ–ø—Ä–æ—Å...")

        def progress_callback(stage_text):
            try:
                bot.edit_message_text(
                    chat_id=message.chat.id,
                    message_id=status_msg.message_id,
                    text=stage_text
                )
            except Exception as e:
                print(f"[WARN] –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å: {e}")

        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–≥–æ –¥–≤–∏–∂–∫–∞
        answer = query(text, progress_callback=progress_callback)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
        users_collection.update_one(
            {"user_id": user_id},
            {"$push": {
                "answers": {
                    "text": answer,
                    "timestamp": datetime.now(timezone.utc).isoformat()
                }
            }}
        )
        
        # –£–º–µ–Ω—å—à–∞–µ–º –ª–∏–º–∏—Ç
        users_collection.update_one(
            {"user_id": user_id},
            {"$inc": {"message_limit": -1}}
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
        remaining = user.get("message_limit", 1) - 1
        final_answer = f"{answer}\n\nüìù –û—Å—Ç–∞–ª–æ—Å—å –≤–æ–ø—Ä–æ—Å–æ–≤: {remaining}"
        
        bot.edit_message_text(
            chat_id=message.chat.id,
            message_id=status_msg.message_id,
            text=final_answer
        )
        
    except Exception as e:
        print(f"[ERROR] {e}")
        bot.send_message(
            message.chat.id, 
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )

@bot.message_handler(content_types=['voice'])
def handle_voice_message(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (—Ç–æ–ª—å–∫–æ –¥–ª—è —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π)"""
    user_id = message.from_user.id
    current_state = user_states.get(user_id)
    
    if current_state != "lawyer_consultation":
        bot.reply_to(
            message,
            "üé§ –ì–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ —Ä–µ–∂–∏–º–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π.\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –≤—ã–±–æ—Ä–∞ —É—Å–ª—É–≥–∏."
        )
        return
    
    # –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π...
    # (–º–æ–∂–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∏–∑ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    print("[INFO] –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    while True:
        try:
            bot.polling(none_stop=True, timeout=60)
        except Exception as e:
            print(f"[ERROR] Polling crashed: {e}")
            time.sleep(5)